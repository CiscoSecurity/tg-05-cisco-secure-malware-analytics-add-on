import cx from 'classnames'
import { useDispatch, useSelector } from 'react-redux'
import PropTypes from 'prop-types'
import { useRef, useState } from 'react'

import { hideModal } from './ModalSlice'
import { Close } from '../Icons/Icons'
import Form from '../Form/Form'

import styles from './Modal.module.scss'

const Modal = ({ submitFunction = () => {}, cancelFunction }) => {
  const formRef = useRef(null)
  const [disableSubmit, setDisableSubmit] = useState()
  const dispatch = useDispatch()
  const {
    verbiage: { title, body, formProps, cancel, submit },
    isShown
  } = useSelector((state) => state.modal)

  const handleHideModal = () => {
    dispatch(hideModal())
  }

  const handleSubmitModal = () => {
    if (formRef.current) {
      formRef.current.submitForm()
    }

    dispatch(hideModal())
    submitFunction()
  }

  return isShown && (
    <div id="defaultModal" className={cx('modal', styles.modal, isShown && styles['modal--opened'])}>
      <div className="modal__dialog">
        <div className="modal__content">
          <div className="modal__header">
            <div className="modal__title">{title}</div>
            <a className="modal__close" onClick={handleHideModal}>
              <Close />
            </a>
          </div>
          <div className="modal__body">
            {body
              ? body
              : <Form {...formProps} setDisableSubmit={setDisableSubmit} ref={formRef} />}
          </div>
          <div className="modal__footer">
            <button className="btn btn--tertiary" onClick={handleHideModal}>
              {cancel}
            </button>
            <button
              className="btn btn--primary"
              disabled={disableSubmit}
              onClick={handleSubmitModal}
            >
              {submit}
            </button>
          </div>
        </div>
      </div>
    </div>
  )
}

Modal.propTypes = {
  cancelFunction: PropTypes.func,
  submitFunction: PropTypes.func
}

export default Modal
