import PropTypes from 'prop-types'
import cx from 'classnames'

import { Close, Critical, Good, Info, Warning } from '../Icons/Icons'

import styles from './PageLevel.module.scss'

export const GENERIC_ERROR =
  'Something went wrong. Please try again later or contact support.'

export const information = {
  className: 'information',
  iconStyle: 'information',
  icon: <Info />,
}

export const generateNotificationType = type => ({
  success: { className: 'success', iconStyle: 'good', icon: <Good /> },
  information,
  warning: { className: 'warning', iconStyle: 'warning', icon: <Warning /> },
  error: { className: 'danger', iconStyle: 'critical-stop', icon: <Critical /> }
}[type] ?? information)

const PageLevel = ({
  type = 'information',
  message = GENERIC_ERROR,
  onClose,
  index = 0,
  classOverrides
}) => {
  const { className, icon, iconStyle } = generateNotificationType(type)

  return (
    <div className={cx(
      'notification',
      styles.notificationContainer,
      classOverrides?.notificationContainer
    )}>
      <div
        tabIndex="0"
        className={`alert alert--state-${className}`}
        data-testid={`pagelevel-${type}`}
      >
        <div className={`alert__icon icon-${iconStyle}`}>{icon}</div>
        <div className={`alert__message ${styles.fullLength}`}>
          {message}
        </div>
        <a
          tabIndex="0"
          onClick={() => onClose(index)}
          className="alert__icon icon-close"
          data-testid="pagelevel-onclose"
        ><Close /></a>
      </div>
    </div>
  )
}

PageLevel.propTypes = {
  type: PropTypes.string,
  message: PropTypes.oneOfType([
    PropTypes.string,
    PropTypes.element,
  ]),
  onClose: PropTypes.func.isRequired,
  index: PropTypes.number,
  classOverrides: PropTypes.object
}

export default PageLevel
