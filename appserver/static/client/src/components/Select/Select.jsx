import cx from 'classnames'
import { useEffect, useRef, useState } from 'react'
import PropTypes from 'prop-types'

import { Checkmark, Down } from '../Icons/Icons'

import styles from './Select.module.scss'

const Select = ({ selected, options, onChange }) => {
  const selectButtonRef = useRef(null)
  const [isOpened, setIsOpened] = useState(false)
  const selectedTitle = options.find(({ value }) => value === selected)?.title

  useEffect(() => {
    const handleClickOutside = (event) => {
      if (selectButtonRef.current && !selectButtonRef.current.contains(event.target)) {
        setIsOpened(false)
      }
    }
    document.addEventListener('click', handleClickOutside)

    return () => {
      document.removeEventListener('click', handleClickOutside)
    }
  }, [])

  const handleOptionClick = (value) => {
    onChange(value)
    setIsOpened(false)
  }

  return (
    <div className={styles.selectContainer}>
      <button
        ref={selectButtonRef}
        className={cx(styles.button, 'btn btn--secondary')}
        onClick={() => setIsOpened(true)}
      >
        {selectedTitle} <Down />
      </button>
      {isOpened && (
        <div id="contextMenuBottom" className={cx(styles.contextMenu, 'context-menu context-menu--bottom')}>
          <div className="context-menu__arrow"></div>
          <div className={cx(styles.contextMenuBody, 'context-menu__body')}>
            <ul className={styles.list}>
              {options.map(({ title, value }) => (
                <li
                  key={title}
                  className={cx(styles.listValue, selected === value && 'selected')}
                  onClick={() => handleOptionClick(value)}
                >
                  {selected === value ? <Checkmark /> : null}
                  {title}
                </li>
              ))}
            </ul>
          </div>
        </div>
      )}
    </div>
  )
}

Select.propTypes = {
  selected: PropTypes.bool.isRequired,
  options: PropTypes.array.isRequired,
  onChange: PropTypes.func.isRequired
}

export default Select
