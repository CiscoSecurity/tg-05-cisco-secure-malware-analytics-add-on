import { pickBy, startsWith } from 'lodash'

export const proxyFields = [
  {
    name: 'proxy_enabled',
    type: 'checkbox',
    checkboxLabel: 'Enable'
  },
  {
    name: 'proxy_type',
    label: 'Proxy Type',
    as: 'select',
    options: [
      { view: 'optional', value: '' },
      { view: 'http', value: 'http' },
      { view: 'socks4', value: 'socks4' },
      { view: 'socks5', value: 'socks5' }
    ]
  },
  {
    name: 'proxy_url',
    label: 'Host',
    placeholder: 'optional'
  },
  {
    name: 'proxy_port',
    label: 'Port',
    placeholder: 'optional'
  },
  {
    name: 'proxy_username',
    label: 'Username',
    placeholder: 'optional'
  },
  {
    name: 'proxy_password',
    label: 'Password',
    placeholder: 'optional'
  },
  {
    name: 'proxy_rdns',
    type: 'checkbox',
    checkboxLabel: 'Remote DNS resolution'
  }
]

export const validateProxy = (values) => {
  const errors = {}

  if (values.proxy_enabled) {
    if (!values.proxy_url) {
      errors.proxy_url = 'Host is required.'
    }

    if (!values.proxy_port) {
      errors.proxy_port = 'Port is required.'
    } else if (!/^\d+$/.test(values.proxy_port)) {
      errors.proxy_port = 'Port should be a number.'
    }
  }

  return errors
}

export const getInitialValues = (data) => ({
  ...pickBy(data, (value, key) => startsWith(key, 'proxy_')),
  proxy_enabled: data.proxy_enabled === '1',
  proxy_rdns: data.proxy_rdns === '1'
})
